{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Questions\n",
    "1. Find the mean of old scheme and new scheme column. (5 points)\n",
    "2. Use the five percent significance test over the data to determine the p value to check new scheme has significantly raised outputs? (10 points)\n",
    "3. What conclusion does the test (p-value) lead to? (2.5 points)\n",
    "4. Suppose it has been calculated that in order for Titan to break even, the average output must increase by Â£5000 in the scheme compared to the old scheme. If this figure is alternative hypothesis, what is:\n",
    "        a) The probability of a type 1 error? (2.5 points)\n",
    "\n",
    "        b) What is the p- value of the hypothesis test if we test for a difference of $5000? (10 points)\n",
    "\n",
    "        c) Power of the test (5 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import important libraries and setup the theme for data visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import Basic Libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# Import Datavisualization Libraries\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Set Theme and Pallete for Data Visualization\n",
    "%matplotlib inline\n",
    "sns.set_palette(\"BrBG\")\n",
    "sns.set_style('whitegrid')\n",
    "\n",
    "# Import Libraries for Statistical Analysis\n",
    "import scipy.stats as stats\n",
    "from scipy.stats import ttest_1samp, ttest_ind, mannwhitneyu, levene, shapiro\n",
    "from statsmodels.stats.power import ttest_power"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sales person</th>\n",
       "      <th>old scheme</th>\n",
       "      <th>new scheme</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>57</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>103</td>\n",
       "      <td>122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>59</td>\n",
       "      <td>54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>75</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>84</td>\n",
       "      <td>84</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   sales person  old scheme  new scheme\n",
       "0             1          57          62\n",
       "1             2         103         122\n",
       "2             3          59          54\n",
       "3             4          75          82\n",
       "4             5          84          84"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Importing dataset directly from table on website\n",
    "titansales = pd.read_csv(\"titan sales.csv\")\n",
    "titansales.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 1: Mean of sales considering old scheme and new sceme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean of sales considering old scheme: 68.033 \n",
      "\n",
      "Mean of sales considering new scheme: 72.033 \n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(\"Mean of sales considering old scheme:\", round(titansales['old scheme'].mean(),3),\"\\n\")\n",
    "print(\"Mean of sales considering new scheme:\", round(titansales['new scheme'].mean(),3),\"\\n\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>old scheme</th>\n",
       "      <th>new scheme</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>30.000</td>\n",
       "      <td>30.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>68.033</td>\n",
       "      <td>72.033</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>20.456</td>\n",
       "      <td>24.062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>28.000</td>\n",
       "      <td>32.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>54.000</td>\n",
       "      <td>55.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>67.000</td>\n",
       "      <td>74.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>81.500</td>\n",
       "      <td>85.750</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>110.000</td>\n",
       "      <td>122.000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       old scheme  new scheme\n",
       "count      30.000      30.000\n",
       "mean       68.033      72.033\n",
       "std        20.456      24.062\n",
       "min        28.000      32.000\n",
       "25%        54.000      55.000\n",
       "50%        67.000      74.000\n",
       "75%        81.500      85.750\n",
       "max       110.000     122.000"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Descriptive statistics\n",
    "round(titansales[['old scheme','new scheme']].describe(),3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 2: Use the five percent significance test over the data to determine the p value to check new scheme has significantly raised outputs?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Shapiro Test on sales considering old scheme: (0.9885101914405823, 0.9813658595085144) \n",
      "\n",
      "Shapiro Test on sales considering new scheme: (0.9687567353248596, 0.5057420134544373)\n"
     ]
    }
   ],
   "source": [
    "# Checking normality of the Old Scheme and New Scheme through Shapiro Test\n",
    "# Ho: Data follows normal distribution\n",
    "# Ha: Data does not follow normal distribution\n",
    "\n",
    "print(\"Shapiro Test on sales considering old scheme:\", shapiro(titansales['old scheme']),\"\\n\")\n",
    "print(\"Shapiro Test on sales considering new scheme:\", shapiro(titansales['new scheme']))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### In both cases i.e. \"Sales considering old scheme\" and \"Sales considering new scheme\" the P Value is greater than 0.05 @ 95% Confidence interval, hence, there is no sample evidence to reject the null hypothesis i.e data follows the normal distribution"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LeveneResult(statistic=1.063061539437244, pvalue=0.30679836081811235)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Checking equality of variance between groups\n",
    "# Ho: Variances are equal\n",
    "\n",
    "levene(titansales['old scheme'],titansales['new scheme'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### Here again since the P Value is greater than 0.05 @ 95% Confidence Interval, hence, there is no sample evidence to reject the null hypothesis i.e. variances are equal.\n",
    "\n",
    "##### Since, both the groups follows normal distribution and there is equality of variance between groups, we can proceed with 2 - sample t test and paired t-test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "two-sample t-test t_statistic= -0.6937067608923764\n",
      "two-sample t-test p-value= 0.49063515686248105\n"
     ]
    }
   ],
   "source": [
    "# two-sample t-test\n",
    "# Null Hypothesis : There is no significant difference between mean of sales considering old scheme and new scheme\n",
    "# Alternate Hypothesis : There is a significant difference between mean of sales considering old scheme and new scheme\n",
    "\n",
    "t_statistic, p_value = ttest_ind(titansales['old scheme'], titansales['new scheme'])\n",
    "\n",
    "print(\"two-sample t-test t_statistic=\", t_statistic)\n",
    "print (\"two-sample t-test p-value=\", p_value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "two-sample t-test t_statistic= 1.5559143823544377\n",
      "two-sample t-test p-value= 0.13057553961337662\n"
     ]
    }
   ],
   "source": [
    "# Paired t-test i.e. doing two measurments on the same experimental unit (Before Scheme and After Scheme)\n",
    "# Null Hypothesis : New Scheme did not impact output i.e. difference in mean equal to zero\n",
    "# Alternate Hypothesis : New scheme has significant raised output i.e difference in mean not equal to zero\n",
    "\n",
    "t_statistic_paired, p_value_paired = ttest_1samp(titansales['new scheme'] - titansales['old scheme'], 0)\n",
    "\n",
    "print(\"two-sample t-test t_statistic=\", t_statistic_paired)\n",
    "print (\"two-sample t-test p-value=\", p_value_paired)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 3: What conclusion does the test (p-value) lead to?\n",
    "\n",
    "##### Answer:\n",
    "\n",
    "Here in two-sample t-test p-value is greater than 0.05 i.e. at 95% confidence interval, which suggest that there is no sample evidence to reject null hypothesis i.e. there is no significant difference between mean of sales considering old scheme and new scheme.\n",
    "Also, in paired t-test again the p-value is greater than 0.05 at 95% confidence interval, which suggest that there is no sample evidence to reject null hypothesis i.e. difference in mean of sales output considering old scheme and new scheme is zero."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Question 4: Suppose it has been calculated that in order for Titan to break even, the average output must increase by Â£5000 in the scheme compared to the old scheme. If this figure is alternative hypothesis, what is:\n",
    "\n",
    " a) The probability of a type 1 error? (2.5 points)\n",
    "\n",
    " b) What is the p - value of the hypothesis test if we test for a difference of $5000? (10 points)\n",
    "\n",
    " c) Power of the test (5 points)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### a) Probability of type 1 error : In type one error we reject true null hypothesis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Probability to Type 1 Error =  0.605556695371035\n"
     ]
    }
   ],
   "source": [
    "# current mean and standard deviation of old scheme\n",
    "mos = titansales['old scheme'].mean()\n",
    "sdos = titansales['old scheme'].std()\n",
    "\n",
    "# current mean and standard deviation of new scheme\n",
    "mns = titansales['new scheme'].mean()\n",
    "sdns = titansales['new scheme'].std()\n",
    "\n",
    "# expected mean required for breakeven\n",
    "emos = mos+5\n",
    "\n",
    "# z value for acceptance point\n",
    "z = ((mns - emos)/(sdos/np.sqrt(30)))\n",
    "\n",
    "# Probalility of type 1 error P(Z>=z) = 1-P(Z<z)\n",
    "ProbT1 = 1-stats.norm.cdf(z)\n",
    "\n",
    "print(\"Probability to Type 1 Error = \", ProbT1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### b) What is the p - value of the hypothesis test if we test for a difference of 5000 pounds?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "two-sample t-test t_statistic= -0.3889785955886094\n",
      "two-sample t-test p-value= 0.7001334912613286\n"
     ]
    }
   ],
   "source": [
    "# Method Paired t-test\n",
    "\n",
    "t_statistic_pair, p_value_pair = ttest_1samp(titansales['new scheme'] - titansales['old scheme'], 5)\n",
    "\n",
    "print(\"two-sample t-test t_statistic=\", t_statistic_pair)\n",
    "print (\"two-sample t-test p-value=\", p_value_pair)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here in paired t-test, the p-value is greater than 0.05 at 95% confidence interval, which suggest that there is no sample evidence to reject null hypothesis i.e. average output in new scheme compared to old is < 5000 pounds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### c) Power of the test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Power of Test: 0.009752341834472045\n"
     ]
    }
   ],
   "source": [
    "# Calculating Power of Test\n",
    "# Compute the difference in Means between 2 sample means and divide by pooled Standard Deviation \n",
    "# number of Observations/tuples\n",
    "# Set the alpha value to 0.05 and alternative values 'two-sided' , 'larger' , 'smaller'\n",
    "diff = (np.mean(titansales['old scheme']) - np.mean(titansales['new scheme'])) / np.sqrt(((30-1)*np.var(titansales['old scheme'])+(30-1)*np.var(titansales['new scheme'])) / 30+30-2)\n",
    "print(\"Power of Test:\",ttest_power(diff, nobs=30, alpha=0.05, alternative='larger'))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
